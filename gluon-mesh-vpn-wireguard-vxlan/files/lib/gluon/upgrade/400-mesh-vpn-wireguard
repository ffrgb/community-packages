#!/usr/bin/lua

local site = require 'gluon.site'
local uci = require("simple-uci").cursor()
local util = require "gluon.util"

local privkey = uci:get("wireguard", "wireguard", "privatekey") or
        util.trim(util.exec("wg genkey"))

-- Clean up previous configuration
uci:delete_all('wireguard', 'peer', function(peer)
	return peer.preserve ~= '1'
end)
-- Clean up previous configuration
uci:delete_all('wireguard', 'wireguard', function(peer)
	return peer.preserve ~= '1'
end)

local mesh_enabled = false
if uci:get("gluon", "wireguard", "enabled") then
  if site.mesh_vpn.wireguard.enabled() then
    mesh_enabled = true
  end
end

uci:section("wireguard", "wireguard", "wireguard", {
        iface = site.mesh_vpn.wireguard.iface(),
        limit = site.mesh_vpn.wireguard.limit(),
        enabled = mesh_enabled,
        privatekey = privkey,
})

for name, peer in pairs(site.mesh_vpn.wireguard.peers()) do
        uci:section("wireguard", "peer", "peer_" .. name, {
                enabled = true,
                endpoint = peer.endpoint,
                publickey = peer.publickey,
                link_address = peer.link_address,
        })
end

uci:save('wireguard')
